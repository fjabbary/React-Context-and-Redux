{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/About.js","components/layout/My404Component.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showDetails","toggleDetails","removeContact","a","delete","name","email","phone","className","onClick","bind","to","Contacts","Fragment","length","key","Header","branding","href","About","My404Component","AddContact","onChangeHandler","e","target","onSubmitHandler","preventDefault","method","url","then","console","log","history","push","form","createRef","onSubmit","ref","htmlFor","placeholder","onChange","EditContact","updateContact","match","params","put","oneUser","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6f3348b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact\r\n                )\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n        this.setState(() => ({\r\n            contacts: res.data\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n\r\n    state = {\r\n        showDetails: false\r\n    }\r\n\r\n    toggleDetails = () => {\r\n        this.setState({\r\n            showDetails: !this.state.showDetails\r\n        })\r\n    }\r\n\r\n    removeContact = async (id, dispatch) => {\r\n        await axios.delete('https://jsonplaceholder.typicode.com/users/1')\r\n        dispatch({\r\n            type: 'DELETE_CONTACT',\r\n            payload: id\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact\r\n        const { showDetails } = this.state\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n\r\n                    return (\r\n                        <div className=\"card mb-3 card-contact\">\r\n                            <div className=\"card-body\">\r\n                                <h3>{name}<i className={showDetails ? \"fa fa-minus ml-3\" : \"fa fa-plus ml-3\"} onClick={this.toggleDetails}></i> <i className=\"fa fa-trash float-right\" onClick={this.removeContact.bind(this, id, dispatch)}></i> <Link to={`/contact/edit/${id}`}><i className=\"fa fa-pencil float-right mr-3\"></i></Link> </h3>\r\n\r\n                                {showDetails ? <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul> : null}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context'\r\n\r\nexport default class Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"mb-5\">Contacts({contacts.length})</h1>\r\n                            {contacts.map(contact => <Contact key={contact.id} contact={contact} />)}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    const { branding } = props\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-danger\">\r\n                <a className=\"navbar-brand text-light\" href=\"/\">{branding}</a>\r\n                <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link mr-auto text-white\" to={\"/\"}> <i className=\"fa fa-home\"></i> Home <span className=\"sr-only\">(current)</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link mr-auto text-white\" to={\"/contact/add\"}> <i className=\"fa fa-plus\"></i> Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link mr-auto text-white\" to={\"/about\"}>About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction About(props) {\r\n\r\n    return (\r\n        <div>\r\n            <h1>About Page</h1>\r\n            <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Est, amet ratione! At deleniti voluptatem tempora odit cum doloremque porro nisi et iure, repellat amet cupiditate voluptate, ullam dolore nostrum! Repellat.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst My404Component = () => {\r\n    return (\r\n        <div>\r\n            <h3>404: Page not found</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default My404Component;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context'\r\nimport { v1 as uuid } from \"uuid\";\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        }\r\n\r\n        this.form = React.createRef();\r\n    }\r\n\r\n    onChangeHandler = (e) => this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n\r\n    onSubmitHandler = (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state\r\n\r\n        if (name && email && phone) {\r\n            axios({\r\n                method: 'post',\r\n                url: 'https://jsonplaceholder.typicode.com/users',\r\n                data: {\r\n                    name,\r\n                    email,\r\n                    phone\r\n                }\r\n            }).then(res => {\r\n                console.log(res.data)\r\n                dispatch({\r\n                    type: 'ADD_CONTACT',\r\n                    payload: res.data\r\n                })\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                Add Contact\r\n                        </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmitHandler.bind(this, dispatch)} ref={this.form}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Name:</label>\r\n                                        <input type=\"text\" name=\"name\" placeholder=\"Enter Name...\" className=\"form-control\" value={name} onChange={this.onChangeHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Email:</label>\r\n                                        <input type=\"email\" name=\"email\" placeholder=\"Enter Email...\" className=\"form-control\" value={email} onChange={this.onChangeHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Phone:</label>\r\n                                        <input type=\"text\" name=\"phone\" placeholder=\"Enter Phone...\" className=\"form-control\" value={phone} onChange={this.onChangeHandler} />\r\n                                    </div>\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Add Contact\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n\r\n                }}\r\n\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context'\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        }\r\n\r\n        this.form = React.createRef();\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const id = this.props.match.params.id\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        const oneUser = res.data\r\n        console.log(oneUser)\r\n        this.setState({\r\n            name: oneUser.name,\r\n            email: oneUser.email,\r\n            phone: oneUser.phone\r\n        })\r\n    }\r\n\r\n    onChangeHandler = (e) => this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n\r\n    onSubmitHandler = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state\r\n\r\n        if (name && email && phone) {\r\n            axios({\r\n                method: 'post',\r\n                url: 'https://jsonplaceholder.typicode.com/users',\r\n                data: {\r\n                    name,\r\n                    email,\r\n                    phone\r\n                }\r\n            }).then(res => {\r\n                dispatch({\r\n                    type: 'ADD_CONTACT',\r\n                    payload: res.data\r\n                })\r\n            })\r\n        }\r\n\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact)\r\n\r\n        dispatch({\r\n            type: 'UPDATE_CONTACT',\r\n            payload: res.data\r\n        })\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        })\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                Add Contact\r\n                        </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmitHandler.bind(this, dispatch)} ref={this.form}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Name:</label>\r\n                                        <input type=\"text\" name=\"name\" placeholder=\"Enter Name...\" className=\"form-control\" value={name} onChange={this.onChangeHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Email:</label>\r\n                                        <input type=\"email\" name=\"email\" placeholder=\"Enter Email...\" className=\"form-control\" value={email} onChange={this.onChangeHandler} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Phone:</label>\r\n                                        <input type=\"text\" name=\"phone\" placeholder=\"Enter Phone...\" className=\"form-control\" value={phone} onChange={this.onChangeHandler} />\r\n                                    </div>\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Update Contact\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n\r\n\r\n                }}\r\n\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\nimport './App.css';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/layout/About';\nimport My404Component from './components/layout/My404Component'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { Provider } from './context'\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/\" component={Contacts} exact />\n              <Route path=\"/about\" component={About} exact />\n              <Route path=\"/contact/add\" component={AddContact} />\n              <Route path=\"/contact/edit/:id\" component={EditContact} />\n              <Route path='*' exact={true} component={My404Component} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}